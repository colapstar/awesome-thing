basePath: /
definitions:
  models.User:
    properties:
      createdAt:
        type: string
      email:
        type: string
      id:
        type: string
      username:
        type: string
    type: object
info:
  contact:
    email: justine.bachelard@ext.uca.fr
    name: Justine Bachelard.
  description: API to manage users.
  title: middleware/example
  version: 1.0.0
paths:
  /users:
    get:
      description: Get users.
      produces:
      - application/json
      - text/xml
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "500":
          description: Something went wrong
      summary: Get users.
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create a new user with provided information.
      parameters:
      - description: User Data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      - text/xml
      responses:
        "201":
          description: User Created
        "400":
          description: Bad Request
        "409":
          description: Conflict
        "500":
          description: Something went wrong
      summary: Post user.
      tags:
      - users
  /users/{id}:
    delete:
      description: Delete a user by their unique ID.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      - text/xml
      responses:
        "200":
          description: User Deleted
        "400":
          description: Bad Request
        "404":
          description: User Not Found
        "500":
          description: Internal Server Error
      summary: Delete user.
      tags:
      - users
    get:
      description: Get user by ID.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      - text/xml
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "400":
          description: Bad Request
        "404":
          description: User Not Found
        "500":
          description: Something went wrong
      summary: Get user.
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update an existing user's information.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User Data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      - text/xml
      responses:
        "200":
          description: User Updated
        "500":
          description: Something went wrong
      summary: Update user.
      tags:
      - users
schemes:
- http
swagger: "2.0"
